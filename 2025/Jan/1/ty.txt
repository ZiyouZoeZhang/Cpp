1       2
1:2     1:1
2:1     2:2


1       2       3
1:4     1:1     1:1
2:1     2:4     2:1
3:1     3:1     3:4

1       2       3       4
1:7     1:1     1:1     1:1
2:1     2:6     2:2     2:1
3:1     3:2     3:6     3:1
4:1     4:1     4:1     4:7

1       2       3       4       5
1:11    1:1     1:1     1:1     1:1 
2:1     2:9     2:2     2:      2:
3:1     3:2     3:9     3:      3:
4:1     4:2     4:2     4:      4:
5:1     5:1     5:1     5:      5:

1       2       3       4       5       6
1:16    1:1     1:1     1:      1:      1:
2:1     2:13    2:2     2:      2:      2:      
3:1     3:2     3:12    3:      3:      3:
4:1     4:2     4:3     4:      4:      4:   
5:1     5:2     5:2     5:      5:      5:   
6:1     6:1     6:1     6:      6:      6:      

1       2       3       4       5       6       7
1:22    1:1     1:1     1:1     1:      1:
2:1     2:18    2:2     2:2     2:      2:      
3:1     3:2     3:16    3:3     3:      3:
4:1     4:2     4:3     4:16    4:      4:   
5:1     5:2     5:3     5:3     5:      5:   
6:1     6:2     6:2     6:2     6:      6:      
7:1     7:1     7:1     7:1     7:      7:     

1       2       3       4       5       6       7       8
1:29    1:1     1       1
2:1     2:24    2       2
3:1     3:2     21      3
4:1     4:2     3       20
5:1     5:2     3       4
6:1     6:2     3       3
7:1     7:2     2       2
8:1     8:1     1       1
        -5      -3      -1   

1       2       3       4       5       6       7       8       9
1:37    1       1       1       1
2:1     31      2       2       2
3:1     2       27      3       3
4:1     2       3       25      4
5:1     2       3       4       25
6:1     2       3       4       4
7:1     2       3       3       3
8:1     2       2       2       2
9:1     1       1       1       1
        -6      -4      -2      0

odd:
same[0] = (N-1)*(N-2) +1
count = ((N/2)-2)*2
i=0;
while(count>0){
    i++;
    same[i] = same[i-1]-count;
    count -= 2;
}
same[++i] = 0;
for(;i<N; i++){
    count+=2;
    same[i]=same[i-1]+count;
}

even:
same[0] = (N-1)*(N-2) +1